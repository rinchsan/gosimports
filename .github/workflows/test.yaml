name: Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  go-versions:
    name: Fetch Go versions
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.versions.outputs.value }}
    steps:
      - name: Fetch versions
        id: versions
        run: |
          versions=$(curl -s 'https://go.dev/dl/?mode=json' | jq -c 'map(.version[2:])')
          echo "value=${versions}" >> $GITHUB_OUTPUT

  lint:
    name: Lint
    needs:
      - go-versions
    strategy:
      matrix:
        go-version: ${{ fromJson(needs.go-versions.outputs.versions) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.51
      - name: Run govulncheck
        run: go run golang.org/x/vuln/cmd/govulncheck@latest ./...

  test:
    name: Test
    needs:
      - go-versions
    strategy:
      matrix:
        go-version: ${{ fromJson(needs.go-versions.outputs.versions) }}
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run test
        run: go test ./...
